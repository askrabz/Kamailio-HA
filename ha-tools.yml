#!/usr/bin/env ansible-playbook

##############################################################
# Author: Gholamreza Sabery Tabrizy
# Email: reza_sabery_89@yahoo.com
# Project Repository: https://github.com/ghrst/Kamailio-HA
##############################################################


#Very Important:: Be sure that host name of your nodes are not equal!

- name: Install and configure Corosync, Pacemaker and Crmsh
  hosts: kamailio
  become: False
  vars_files:
    - settings.yml

  tasks:
  
    - name: Installing prerequisites for compiling Corosync and Pacemaker
      apt: pkg={{ item }} update_cache=yes
      with_items:
        - build-essential
        - automake
        - autoconf
        - libtool
        - pkg-config
        - libnss3-dev
        - groff
        - libaio-dev
        - libtool-bin
        - libglib2.0-dev
        - libxml2-dev
        - libbz2-dev
        - uuid-dev
        - uuid
        - libxslt1-dev
        - libncurses5-dev
        - python-lxml
          
    - name: Downloading libpq's source package
      get_url: url=https://github.com/ClusterLabs/libqb/archive/v0.17.0.tar.gz dest=/usr/src/libpq-0.17.0.tar.gz 
      
    - name: Un-taring libpq's archive
      unarchive: src=/usr/src/libpq-0.17.0.tar.gz dest=/usr/src copy=no
      
    - name: Echoing version to .tarball_version refer to http://clusterlabs.org/wiki/Compiling_on_Debian#Update_for_Debian_8.0_.22Jessie.22
      shell: echo "0.17.0" > .tarball-version chdir=/usr/src/libqb-0.17.0
      
    - name: ./autogen.sh
      shell: ./autogen.sh chdir=/usr/src/libqb-0.17.0
      
    - name: ./configure
      shell: ./configure chdir=/usr/src/libqb-0.17.0
      
    - name: Compiling Libpq
      shell: make chdir=/usr/src/libqb-0.17.0
      
    - name: make install 
      shell: make install chdir=/usr/src/libqb-0.17.0
    
    - name: Downloading Corosync's source code
      get_url: url=https://github.com/corosync/corosync/archive/v2.3.3.tar.gz dest=/usr/src/corosync-2.3.3.tar.gz
      
    - name: Un-taring Corosync's source archive
      unarchive: src=/usr/src/corosync-2.3.3.tar.gz dest=/usr/src/ copy=no
      
    - name: Echoing version to .tarball_version refer to http://clusterlabs.org/wiki/Compiling_on_Debian#Update_for_Debian_8.0_.22Jessie.22
      shell: echo "2.3.3" > .tarball-version chdir=/usr/src/corosync-2.3.3
      
    - name: ./autogen.shell
      shell: ./autogen.sh chdir=/usr/src/corosync-2.3.3
      
    - name: ./configure
      shell: ./configure chdir=/usr/src/corosync-2.3.3
      
    - name: Compiling Corosync
      shell: make   chdir=/usr/src/corosync-2.3.3
      
    - name: Installing Corosync
      shell: make install chdir=/usr/src/corosync-2.3.3
      
    - name: Copying Corosync's init script
      copy: src=files/corosync.init dest=/etc/init.d/corosync force=yes mode="a+x"
    
    - name: Downloading Cluster-Glue's source code
      get_url: url=http://hg.linux-ha.org/glue/archive/glue-1.0.12.tar.bz2 dest=/usr/src/ 
      
    - name: Un-taring Cluster-Glue's source archive
      unarchive: src=/usr/src/glue-1.0.12.tar.bz2 dest=/usr/src/ copy=no
      
    - name: ./autogen.shell
      shell: ./autogen.sh chdir=/usr/src/Reusable-Cluster-Components-glue--glue-1.0.12
      
    - name: ./configure
      shell: ./configure --enable-fatal-warnings=no chdir=/usr/src/Reusable-Cluster-Components-glue--glue-1.0.12
      
    - name: Compiling Cluster-Glue
      shell: make chdir=/usr/src/Reusable-Cluster-Components-glue--glue-1.0.12
      
    - name: Installing Cluster-Glue
      shell: make install chdir=/usr/src/Reusable-Cluster-Components-glue--glue-1.0.12
      
    - name: Downloading Resource Agents
      get_url: url=https://github.com/ClusterLabs/resource-agents/archive/v3.9.6.tar.gz dest=/usr/src/
      
    - name: Un-taring Resource Agent's archive
      unarchive: src=/usr/src/resource-agents-3.9.6.tar.gz dest=/usr/src/ copy=no
      
    - name: Echoing version to .tarball_version refer to http://clusterlabs.org/wiki/Compiling_on_Debian#Update_for_Debian_8.0_.22Jessie.22
      shell: echo "3.9.5" > .tarball-version chdir=/usr/src/resource-agents-3.9.6
      
    - name: ./autogen.sh 
      shell: ./autogen.sh chdir=/usr/src/resource-agents-3.9.6
      
    - name: ./configure
      shell: ./configure chdir=/usr/src/resource-agents-3.9.6
      
    - name: Compiling Resource Agents
      shell: make chdir=/usr/src/resource-agents-3.9.6
      
    - name: Installing Resource Agents
      shell: make install chdir=/usr/src/resource-agents-3.9.6
      
    - name: Adding a group for pacemaker
      group: name=haclient system=yes state=present

    - name: Adding a user for Pacemaker
      user: name=hacluster system=yes createhome=no group=haclient
      
    - name: Downloading Pacemaker's Source code  
      get_url: url=https://github.com/ClusterLabs/pacemaker/archive/Pacemaker-1.1.13.tar.gz dest=/usr/src
      
    - name: Un-taring Pacemaker's source code!
      unarchive: src=/usr/src/pacemaker-Pacemaker-1.1.13.tar.gz dest=/usr/src copy=no
      
    - name: ./autogen.sh
      shell: ./autogen.sh  chdir=/usr/src/pacemaker-Pacemaker-1.1.13
      
    - name: ./configure
      shell: ./configure  chdir=/usr/src/pacemaker-Pacemaker-1.1.13
      
    - name: make
      shell: make chdir=/usr/src/pacemaker-Pacemaker-1.1.13
      
    - name: make install
      shell: make install chdir=/usr/src/pacemaker-Pacemaker-1.1.13
      
    - name: Downloading crmsh's source code
      get_url: url=https://github.com/ClusterLabs/crmsh/archive/2.1.0.tar.gz dest=/usr/src/crmsh-2.1.0.tar.gz
      
    - name: Un-taring crmsh's source code
      unarchive: src=/usr/src/crmsh-2.1.0.tar.gz dest=/usr/src copy=no
      
    - name: ./autogen.sh
      shell: ./autogen.sh chdir=/usr/src/crmsh-2.1.0
      
    - name: ./configure
      shell: ./configure chdir=/usr/src/crmsh-2.1.0
      
    - name: Compiling crmsh
      shell: make chdir=/usr/src/crmsh-2.1.0
      
    - name: Installing crmsh
      shell: make install chdir=/usr/src/crmsh-2.1.0
    
    - name: Adding Default Start runlevels to Corosync's init script
      lineinfile: 'dest=/etc/init.d/corosync regexp="^# Default-Start:" line="# Default-Start: 2 3 4 5" state=present' 
      
    - name: Adding Default Start runlevels to Pacemaker's init script
      lineinfile: 'dest=/etc/init.d/pacemaker regexp="^# Default-Start:" line="# Default-Start: 2 3 4 5" state=present'
    
    - name: Adding corosync to different runlevels
      shell: update-rc.d corosync defaults
      
    - name: Adding pacemaker to different runlevels
      shell: update-rc.d pacemaker defaults
        
    - name: Copying corosync configuration template to each machine!
      template: src=templates/corosync.conf dest=/etc/corosync/corosync.conf force=yes
      notify: restart corosync
      
    - name: Creating /var/log/corosync
      file: path=/var/log/corosync state=directory owner=hacluster group=haclient mode=0755
      
    - name: Start Corosync
      service: name=corosync state=started
      
    - name: Start Pacemaker
      service: name=pacemaker state=started

    